<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webapp.daos.TourReferrerBenefitDao">

	<resultMap id="tourReferrerBenefitModelResultMap" type="TourReferrerBenefitModel" >
  
		<result property="tourReferrerBenefitId" column="tour_referrer_benefit_id" /> 
		<result property="driverReferralCodeLogId" column="driver_referral_code_log_id" />
		<result property="tourId" column="tour_id" />
		<result property="referrerDriverPercentage" column="referrer_driver_percentage" />
		<result property="referrerDriverBenefit" column="referrer_driver_benefit" />
		<result property="tourReferrerType" column="tour_referrer_type" />
		
		<result property="recordStatus" column="record_status" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
		<result property="createdBy" column="created_by" />
		<result property="updatedBy" column="updated_by" />
		
		<result property="userTourId" column="user_tour_id" />
		<result property="driverName" column="driver_name" />
		<result property="driverEmail" column="driver_email" />
        <result property="driverPhoneNumber" column="driver_phone_number" />
        <result property="passengerName" column="passenger_name" />
        <result property="passengerEmail" column="passenger_email" />
        <result property="passengerPhoneNumber" column="passenger_phone_number" />
        
        <result property="driverPhotoUrl" column="driver_photo_url" />
        <result property="passengerPhotoUrl" column="passenger_photo_url" />
		
	</resultMap>
	
	<insert id="addTourReferrerBenefit" parameterType="TourReferrerBenefitModel">

		INSERT INTO 
			tour_referrer_benefits
				(
	           		tour_referrer_benefit_id, driver_referral_code_log_id, tour_id, referrer_driver_percentage, referrer_driver_benefit, tour_referrer_type,
	           		record_status, created_by, created_at, updated_by, updated_at
	           	)
	   	VALUES 
				(
					#{tourReferrerBenefitId}, #{driverReferralCodeLogId}, #{tourId}, #{referrerDriverPercentage}, #{referrerDriverBenefit}, #{tourReferrerType},
					#{recordStatus}, #{createdBy}, #{createdAt}, #{updatedBy}, #{updatedAt}
				)
				
	</insert>
	
	<select id="getTourReferrerBenefitByTourId" parameterType="map" resultMap="tourReferrerBenefitModelResultMap"> 		
		
	   	SELECT     
			tour_referrer_benefit_id, driver_referral_code_log_id, tour_id, referrer_driver_percentage, referrer_driver_benefit, tour_referrer_type,
	        record_status, created_by, created_at, updated_by, updated_at
	        
		FROM 
			tour_referrer_benefits
			
 		WHERE  
          	tour_id = #{tourId}
        AND
        	record_status = 'A'
				
	</select>
	
	<select id="getTotalTourReferrerBenefitCountForSearch" parameterType="map" resultType="int"> 		
		
	    SELECT 
			count(TRB.tour_referrer_benefit_id)
			
		FROM 
			tour_referrer_benefits TRB
			
		INNER JOIN driver_referral_code_logs DRCL ON (DRCL.driver_referral_code_log_id = TRB.driver_referral_code_log_id)
			
		INNER JOIN tours T ON (T.tour_id = TRB.tour_id)
			
		INNER JOIN users DU ON (DU.user_id = T.driver_id)
		INNER JOIN user_info DUI ON (DUI.user_id = DU.user_id)
		
		INNER JOIN users PU ON (PU.user_id = T.passenger_id)
		INNER JOIN user_info PUI ON (PUI.user_id = PU.user_id)
			
		WHERE 
			TRB.created_at &gt; #{startDate}
		AND
			TRB.created_at &lt; #{endDate}
			
		<if test="driverId != null">
		AND
			DRCL.driver_id = #{driverId}	
		</if>
		
	</select>
	
	<select id="getTourReferrerBenefitListForSearch"  parameterType="map"  resultMap="tourReferrerBenefitModelResultMap">
		
		SELECT 
			TRB.tour_referrer_benefit_id, TRB.driver_referral_code_log_id, TRB.tour_id, TRB.referrer_driver_percentage, TRB.referrer_driver_benefit, 
			TRB.tour_referrer_type, TRB.record_status, TRB.created_by, TRB.created_at, TRB.updated_by, TRB.updated_at,
	        T.user_tour_id,
	        DU.email AS driver_email,
            CONCAT(DUI.first_name, CONCAT(' ', DUI.last_name)) AS driver_name,
            CONCAT(DUI.phone_no_code, CONCAT(' ', DUI.phone_no)) AS driver_phone_number,
	        PU.email AS passenger_email,
            CONCAT(PUI.first_name, CONCAT(' ', PUI.last_name)) AS passenger_name,
            CONCAT(PUI.phone_no_code, CONCAT(' ', PUI.phone_no)) AS passenger_phone_number
            
		FROM 
			tour_referrer_benefits TRB
			
		INNER JOIN driver_referral_code_logs DRCL ON (DRCL.driver_referral_code_log_id = TRB.driver_referral_code_log_id)
		INNER JOIN tours T ON (T.tour_id = TRB.tour_id)
		INNER JOIN users DU ON (DU.user_id = T.driver_id)
		INNER JOIN user_info DUI ON (DUI.user_id = DU.user_id)
		INNER JOIN users PU ON (PU.user_id = T.passenger_id)
		INNER JOIN user_info PUI ON (PUI.user_id = PU.user_id)
			
		WHERE 
			(
						CAST (TRB.referrer_driver_benefit AS character varying) iLIKE #{globalSearchString} 
					OR
						CAST (T.user_tour_id AS character varying) iLIKE #{globalSearchString}
					OR
                  		DU.email iLIKE #{globalSearchString} 
			 		OR 
			 			DUI.first_name iLIKE #{globalSearchString} 
			 		OR 
			 			DUI.last_name iLIKE #{globalSearchString}
			 		OR 
			 			DUI.phone_no_code iLIKE #{globalSearchString}
			 		OR 
			 			DUI.phone_no iLIKE #{globalSearchString}
			 		OR 
			 			CONCAT(DUI.first_name,CONCAT(' ',DUI.last_name)) iLIKE #{globalSearchString} 
			 		OR 
			 			CONCAT(DUI.phone_no_code,CONCAT(' ',DUI.phone_no)) iLIKE #{globalSearchString}
			 		OR 
			 			PU.email iLIKE #{globalSearchString} 
			 		OR 
			 			PUI.first_name iLIKE #{globalSearchString} 
			 		OR 
			 			PUI.last_name iLIKE #{globalSearchString}
			 		OR 
			 			PUI.phone_no_code iLIKE #{globalSearchString}
			 		OR 
			 			PUI.phone_no iLIKE #{globalSearchString}
			 		OR 
			 			CONCAT(PUI.first_name,CONCAT(' ',PUI.last_name)) iLIKE #{globalSearchString} 
			 		OR 
			 			CONCAT(PUI.phone_no_code,CONCAT(' ',PUI.phone_no)) iLIKE #{globalSearchString}
			) 
		AND
			TRB.created_at &gt; #{startDate}
		AND
			TRB.created_at &lt; #{endDate}
			
		<if test="driverId != null">
		AND
			DRCL.driver_id = #{driverId}	
		</if>
	    
		ORDER BY DRCL.updated_at DESC
		<if test="length>0">
        LIMIT  #{length}  OFFSET  #{start}        
        </if>
        
	</select>
	
	<select id="getTotalDriverBenefitByDriverId" parameterType="map" resultType="double"> 		
		
	    SELECT 
			COALESCE(SUM(TRB.referrer_driver_benefit),0)
			
		FROM 
			tour_referrer_benefits TRB
			
		INNER JOIN 
				driver_referral_code_logs DRCL 
		ON 
			DRCL.driver_referral_code_log_id = TRB.driver_referral_code_log_id
			
		WHERE 
			DRCL.driver_id = #{driverId}	
		
	</select>
	
	<select id="getDriverReferrerlListByDriverId"  parameterType="map"  resultMap="tourReferrerBenefitModelResultMap">
		
		SELECT 
			TRB.tour_referrer_benefit_id, TRB.driver_referral_code_log_id, TRB.tour_id, TRB.referrer_driver_percentage, TRB.referrer_driver_benefit, 
			TRB.tour_referrer_type, TRB.record_status, TRB.created_by, TRB.created_at, TRB.updated_by, TRB.updated_at,
	        T.user_tour_id,
	        DU.email AS driver_email, DU.photo_url AS driver_photo_url,
            CONCAT(DUI.first_name, CONCAT(' ', DUI.last_name)) AS driver_name,
            CONCAT(DUI.phone_no_code, CONCAT(' ', DUI.phone_no)) AS driver_phone_number,
	        PU.email AS passenger_email, PU.photo_url AS passenger_photo_url,
            CONCAT(PUI.first_name, CONCAT(' ', PUI.last_name)) AS passenger_name,
            CONCAT(PUI.phone_no_code, CONCAT(' ', PUI.phone_no)) AS passenger_phone_number
            
		FROM 
			tour_referrer_benefits TRB
			
		INNER JOIN driver_referral_code_logs DRCL ON (DRCL.driver_referral_code_log_id = TRB.driver_referral_code_log_id)
		INNER JOIN tours T ON (T.tour_id = TRB.tour_id)
		INNER JOIN users DU ON (DU.user_id = T.driver_id)
		INNER JOIN user_info DUI ON (DUI.user_id = DU.user_id)
		INNER JOIN users PU ON (PU.user_id = T.passenger_id)
		INNER JOIN user_info PUI ON (PUI.user_id = PU.user_id)
			
		WHERE 
			DRCL.driver_id = #{driverId}	
	    
		ORDER BY DRCL.updated_at DESC
		
        LIMIT  #{length}  OFFSET  #{start}        
        
	</select>
	
</mapper>