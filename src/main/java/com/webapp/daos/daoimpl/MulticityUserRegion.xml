<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webapp.daos.MulticityUserRegionDao">

	<resultMap id="multicityUserRegionResultMap" type="MulticityUserRegionModel" >
	    
		<result property="multicityUserRegionId" column="multicity_user_region_id" />
		<result property="multicityCountryId" column="multicity_country_id" />
		<result property="multicityCityRegionId" column="multicity_city_region_id" />
		<result property="userId" column="user_id" />
		<result property="roleId" column="role_id" />
		<result property="regionName" column="regionName"/>

		<result property="recordStatus" column="record_status" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
		<result property="createdBy" column="created_by" />
		<result property="updatedBy" column="updated_by" />
		
	</resultMap>
	
	<select id="getMulticityUserRegionByUserId" parameterType="String" resultMap="multicityUserRegionResultMap">
	
<!-- 		SELECT -->
<!-- 			* -->
<!-- 		FROM -->
<!-- 			multicity_user_region -->
<!-- 		WHERE -->
<!-- 			user_id = #{userId} -->
<!-- 		AND -->
<!-- 			record_status = 'A' -->
			
		SELECT 
			mur.multicity_user_region_id, mur.multicity_country_id, mur.multicity_city_region_id, mur.user_id,mur.role_id,
			mur.record_status, mur.created_at, mur.updated_at, mur.created_by, mur.updated_by, mcr.city_display_name AS regionName
			
		FROM
			multicity_user_region mur 
			
		INNER JOIN 
				multicity_city_region mcr 
		ON 
			mcr.multicity_city_region_id = mur.multicity_city_region_id
			
		WHERE
			mur.record_status = 'A'
			
		<if test="userId != null">
		AND
			mur.user_id = #{userId}
		</if>
	
	</select>
	
	<insert id="addMulticityUserRegion" parameterType="MulticityUserRegionModel" useGeneratedKeys="false">
		
		INSERT INTO 
			multicity_user_region
				(
		            multicity_user_region_id, multicity_country_id, multicity_city_region_id, user_id, role_id, 
		            record_status, created_by, created_at, updated_by, updated_at
		        )
    	VALUES 
			<foreach collection="multicityUserRegionModel" item="noModel" separator=","> 
				(
					#{noModel.multicityUserRegionId}, #{noModel.multicityCountryId}, #{noModel.multicityCityRegionId}, #{noModel.userId},#{noModel.roleId}, 
					'A', #{noModel.createdBy}, #{noModel.createdAt}, #{noModel.updatedBy}, #{noModel.updatedAt}
				)	 
			</foreach>
			
	</insert>

	<update id="deleteUserRegions" parameterType="MulticityUserRegionModel">
	
<!-- 		UPDATE -->
<!-- 			multicity_user_region -->
<!-- 		SET -->
<!-- 			record_status = 'D' -->
<!-- 		WHERE -->
<!-- 			driver_id = #{driverId} -->
<!-- 		AND -->
<!-- 			record_status = 'A' -->

			DELETE FROM multicity_user_region WHERE user_id = #{userId}
			
	</update>

</mapper> 